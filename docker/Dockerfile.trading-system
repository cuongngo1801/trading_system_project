# Multi-stage build for production trading system
FROM python:3.9-slim as base

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies including PostgreSQL development headers
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    make \
    curl \
    git \
    libpq-dev \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy requirements first for better caching
COPY ../requirements.txt .

# Install Python dependencies
RUN pip install --upgrade pip && \
    pip install -r requirements.txt

# Development stage
FROM base as development

# Install development dependencies
RUN pip install pytest pytest-cov black isort flake8 mypy

# Copy source code
COPY ../ .

# Install package in development mode
RUN pip install -e .

# Expose ports
EXPOSE 8000 9090

# Default command for development
CMD ["python", "-m", "trading_system.main"]

# Production stage
FROM base as production

# Create non-root user
RUN groupadd -r trading && useradd -r -g trading trading

# Copy only necessary files
COPY ../trading_system/ ./trading_system/
COPY ../config/ ./config/
COPY ../setup.py .
COPY ../README.md .

# Install package
RUN pip install .

# Create directories and set permissions
RUN mkdir -p /app/logs /app/data && \
    chown -R trading:trading /app

# Switch to non-root user
USER trading

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose ports
EXPOSE 8000

# Production command
CMD ["python", "-m", "trading_system.main", "--config", "config/production.yaml"]

# Default to production stage
FROM production
